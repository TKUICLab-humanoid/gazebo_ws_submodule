<?xml version="1.0" ?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <!--arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/-->
  <arg name="world" default="kidsize.world"/>
  <arg name="world_name" default="$(find fira_gz)/world/$(arg world)"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <!--arg name="debug" value="$(arg debug)" /-->
    <!--arg name="gui" value="$(arg gui)" /-->
    <arg name="paused" value="true"/>
    <!--arg name="use_sim_time" value="$(arg use_sim_time)"/-->
    <!--arg name="headless" value="$(arg headless)"/-->
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find urdf)/kidsize_model/robocup_robot/robots/robocup.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model kidsize -param robot_description -x 0.0 -y 0.0 -z -0.025 -R 0 -P 0.0"/>

  <include file="$(find urdf)/kidsize_model/robocup_robot/launch/robocup_controllers.launch" />
</launch>
